<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classActionInitialization" kind="class" language="C++" prot="public">
    <compoundname>ActionInitialization</compoundname>
    <basecompoundref refid="classG4VUserActionInitialization" prot="public" virt="non-virtual">G4VUserActionInitialization</basecompoundref>
    <includes refid="ActionInitialization_8hh" local="no">ActionInitialization.hh</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classActionInitialization_1ad7c1e53093b731f00b91e643e50b7d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ActionInitialization::ActionInitialization</definition>
        <argsstring>()</argsstring>
        <name>ActionInitialization</name>
        <qualifiedname>ActionInitialization::ActionInitialization</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor implementation.</para>
<para>No initialization needed in constructor</para>
<para>Calls the base class constructor. No additional initialization needed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/user/z37/test_windsurf/include/ActionInitialization.hh" line="25" column="5" bodyfile="/user/z37/test_windsurf/src/ActionInitialization.cc" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classActionInitialization_1acaf37c7dc69ff697782dccd6b41e73a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>ActionInitialization::~ActionInitialization</definition>
        <argsstring>()</argsstring>
        <name>~ActionInitialization</name>
        <qualifiedname>ActionInitialization::~ActionInitialization</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Destructor implementation.</para>
<para>No cleanup needed as user actions are managed by Geant4 kernel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/user/z37/test_windsurf/include/ActionInitialization.hh" line="28" column="13" bodyfile="/user/z37/test_windsurf/src/ActionInitialization.cc" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classActionInitialization_1a48c24b5a340ef3e8a69f44f9b6bf02be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ActionInitialization::BuildForMaster</definition>
        <argsstring>() const</argsstring>
        <name>BuildForMaster</name>
        <qualifiedname>ActionInitialization::BuildForMaster</qualifiedname>
        <briefdescription>
<para>Creates user actions for master thread. </para>
        </briefdescription>
        <detaileddescription>
<para>Implementation of master thread initialization.</para>
<para>Called only in multi-threading mode. Creates actions that should only run on the master thread, specifically the <ref refid="classRunAction" kindref="compound">RunAction</ref> for ROOT file management.</para>
<para>Creates only the <ref refid="classRunAction" kindref="compound">RunAction</ref> for the master thread in MT mode. This ensures proper handling of the ROOT output file in multi-threaded execution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/user/z37/test_windsurf/include/ActionInitialization.hh" line="37" column="18" bodyfile="/user/z37/test_windsurf/src/ActionInitialization.cc" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classActionInitialization_1a9b8f6328b1b2e3ba39a1c230774cab66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ActionInitialization::Build</definition>
        <argsstring>() const</argsstring>
        <name>Build</name>
        <qualifiedname>ActionInitialization::Build</qualifiedname>
        <briefdescription>
<para>Creates user actions for worker threads. </para>
        </briefdescription>
        <detaileddescription>
<para>Implementation of worker thread initialization.</para>
<para>Creates all necessary user action objects:<itemizedlist>
<listitem><para><ref refid="classPrimaryGeneratorAction" kindref="compound">PrimaryGeneratorAction</ref> for neutron generation</para>
</listitem><listitem><para><ref refid="classRunAction" kindref="compound">RunAction</ref> for data collection</para>
</listitem></itemizedlist>
</para>
<para>Creates all necessary user actions for simulation:<orderedlist>
<listitem><para><ref refid="classPrimaryGeneratorAction" kindref="compound">PrimaryGeneratorAction</ref> - Creates neutrons</para>
</listitem><listitem><para><ref refid="classRunAction" kindref="compound">RunAction</ref> - Handles data collection</para>
</listitem></orderedlist>
</para>
<para>This method is called for each worker thread in MT mode, and for the main thread in sequential mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/user/z37/test_windsurf/include/ActionInitialization.hh" line="46" column="18" bodyfile="/user/z37/test_windsurf/src/ActionInitialization.cc" bodystart="49" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Initializes all user action classes for the simulation. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is responsible for creating and registering all user action classes, including:<itemizedlist>
<listitem><para><ref refid="classPrimaryGeneratorAction" kindref="compound">PrimaryGeneratorAction</ref> for neutron generation</para>
</listitem><listitem><para><ref refid="classRunAction" kindref="compound">RunAction</ref> for ROOT output management</para>
</listitem></itemizedlist>
</para>
<para>It handles both sequential and multi-threaded execution modes. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ActionInitialization</label>
        <link refid="classActionInitialization"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>G4VUserActionInitialization</label>
        <link refid="classG4VUserActionInitialization"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ActionInitialization</label>
        <link refid="classActionInitialization"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>G4VUserActionInitialization</label>
        <link refid="classG4VUserActionInitialization"/>
      </node>
    </collaborationgraph>
    <location file="/user/z37/test_windsurf/include/ActionInitialization.hh" line="17" column="1" bodyfile="/user/z37/test_windsurf/include/ActionInitialization.hh" bodystart="18" bodyend="47"/>
    <listofallmembers>
      <member refid="classActionInitialization_1ad7c1e53093b731f00b91e643e50b7d94" prot="public" virt="non-virtual"><scope>ActionInitialization</scope><name>ActionInitialization</name></member>
      <member refid="classActionInitialization_1a9b8f6328b1b2e3ba39a1c230774cab66" prot="public" virt="virtual"><scope>ActionInitialization</scope><name>Build</name></member>
      <member refid="classActionInitialization_1a48c24b5a340ef3e8a69f44f9b6bf02be" prot="public" virt="virtual"><scope>ActionInitialization</scope><name>BuildForMaster</name></member>
      <member refid="classActionInitialization_1acaf37c7dc69ff697782dccd6b41e73a1" prot="public" virt="virtual"><scope>ActionInitialization</scope><name>~ActionInitialization</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
